{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","reportWebVitals.js","index.js"],"names":["props","_jsx","onClick","e","click","label","className","concat","operation","double","triple","children","initialState","displayValue","clearDisplay","values","current","Calculator","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","_objectSpread","clearMemory","bind","_assertThisInitialized","setOperation","addDigit","_createClass","key","value","this","setState","equals","currentOperation","_toConsumableArray","eval","n","includes","i","newValue","parseFloat","_jsxs","Display","Button","Component","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","class","document","getElementById"],"mappings":"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","file":"static/js/main.a7963f85.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nexport default props =>\n    <button \n    onClick={e => props.click && props.click(props.label)}\n    className={`\n        button\n        ${props.operation ? 'operation' : ''}\n        ${props.double ? 'double' : ''}\n        ${props.triple ? 'triple' : ''}\n    `}>\n        {props.label}\n    </button>","import React, { Component } from 'react'\nimport './Calculator.css'\n\nimport Button from '../components/Button'\nimport Display from '../components/Display'\n\nconst initialState = {\n    displayValue: '0',\n    clearDisplay: false,\n    operation: null,\n    values: [0, 0],\n    current: 0\n}\n\nexport default class Calculator extends Component {\n    state = { ...initialState }\n    constructor(props) {\n        super(props)\n        this.clearMemory = this.clearMemory.bind(this)\n        this.setOperation = this.setOperation.bind(this)\n        this.addDigit = this.addDigit.bind(this)\n    }\n    clearMemory() {\n        this.setState({...initialState})\n    }\n    setOperation(operation) {\n        if (this.state.current === 0) {\n            this.setState({ operation, current: 1, clearDisplay: true })\n        } else {\n            const equals = operation === '='\n            const currentOperation = this.state.operation\n\n            const values = [...this.state.values]\n            try {\n                values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\n            } catch(e) {\n                values[0] = this.state.values[0]\n            }\n            values[1] = 0\n\n            this.setState({\n                displayValue: values[0],\n                operation: equals ? null : operation,\n                current: equals ? 0 : 1,\n                clearDisplay: !equals,\n                values\n            })\n        }\n    }\n    addDigit(n) {\n        if (n === '.' && this.state.displayValue.includes('.')) {\n            return\n        }\n        const clearDisplay = this.state.displayValue === '0'\n            || this.state.clearDisplay\n        const currentValue = clearDisplay ? '' : this.state.displayValue\n        const displayValue = currentValue + n\n        this.setState({ displayValue, clearDisplay: false })\n        if (n !== '.') {\n            const i = this.state.current\n            const newValue = parseFloat(displayValue)\n            const values = [...this.state.values]\n            values[i] = newValue\n            this.setState({ values })\n        }\n    }\n    render () {\n        return (\n            <div className=\"calculator\">\n                <Display value={this.state.displayValue} />\n                <Button label=\"AC\" click={this.clearMemory} triple />\n                <Button label=\"/\" click={this.setOperation} operation />\n                <Button label=\"7\" click={this.addDigit} />\n                <Button label=\"8\" click={this.addDigit} />\n                <Button label=\"9\" click={this.addDigit} />\n                <Button label=\"*\" click={this.setOperation} operation />\n                <Button label=\"4\" click={this.addDigit} />\n                <Button label=\"5\" click={this.addDigit} />\n                <Button label=\"6\" click={this.addDigit} />\n                <Button label=\"-\" click={this.setOperation} operation />\n                <Button label=\"1\" click={this.addDigit} />\n                <Button label=\"2\" click={this.addDigit} />\n                <Button label=\"3\" click={this.addDigit} />\n                <Button label=\"+\" click={this.setOperation} operation />\n                <Button label=\"0\" click={this.addDigit} double />\n                <Button label=\".\" click={this.addDigit} />\n                <Button label=\"=\" click={this.setOperation} operation />\n            </div>\n        )\n    }\n}","import React from 'react'\nimport './Display.css'\n\nexport default props =>\n    <div className=\"display\">{props.value}</div>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <div>\n    <h1 class=\"titulo\">Calculadora</h1>\n    <Calculator />\n  </div>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}